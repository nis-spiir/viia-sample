@model TransactionsViewModel

@{
    ViewBag.Title = "Transactions";
    Layout = "_Layout";
}

<div class="container-fluid">
        <section class="jumbotron text-center">
            <div class="container">
                <h1 class="jumbotron-heading">
                    Transactions
                </h1>
                <hr class="my-4">

                <div class= "row justify-content-md-center">
                   <div class="form-check">
                     <input class="form-check-input" type="checkbox" value="" id="include-deleted" checked="@Model.IncludeDeleted" onclick="toggleIncludeDeleted()">
                     <label class="form-check-label" for="include-deleted">
                       Include soft-deleted transactions
                     </label>
                   </div>
                </div>   
       
            </div>
        </section>
    
    
    <div id="transaction-container" class="col"></div>
    <div class="container" style="width: 100%;">
        <button id="load-more-btn"
                class="btn btn-outline-info btn-lg"
                style="margin:0 auto; display:block;"
                onclick="loadMore()">Load More</button>
    </div>
    <input type="hidden" id="pagingTokenInput" value="@Model.PagingToken">
    <input type="hidden" id="includeDeletedInput" value="@(Model.IncludeDeleted ? 1 : 0)">
</div>

@section Scripts
{
    <script>
        $(document).ready(function() {
            renderTransactions(@Html.Raw(Json.Serialize(@Model.Transactions)));
        });
        
        function renderTransactions(transactions) {
            transactions.forEach(renderSingleTransaction);
        }
        
        function renderSingleTransaction(transaction) {
            let amountSpan = $('<span></span>').text(transaction.transactionAmount.value);
            if(transaction.transactionAmount.value >= 0) {
                amountSpan.addClass('text-success');
            } else {
                amountSpan.addClass('text-danger');
            }
            let amountContainer = $(`<div class="p-2"></div>`).append(amountSpan).append(` ${transaction.transactionAmount.currency}`);
            let balanceContainer = $(`<div class="p-2"></div>`).text(`${transaction.balance.value} ${transaction.balance.currency}`);
            let amountAndBalanceContainer = $(`<div class="flex-column" style="margin-right: 1rem;"></div>`).append(amountContainer).append(balanceContainer);
            
            let deletedSpan = $(`<span class="text-danger"></span>`).text('(DELETED)');
            let txTextContainer = $(`<div class="p-2"></div>`).text(transaction.originalText);
            if(transaction.isDeleted === true) {
                txTextContainer.prepend(deletedSpan);
            }
            let dateContainer = $(`<div class="p-2"></div>`).text(new Date(transaction.date).toISOString());
            let textAndDateContainer = $(`<div class="flex-column flex-fill"></div>`).append(txTextContainer).append(dateContainer);
            
            let transactionContainer = $(`<div class="d-flex account-container justify-content-between"
                   onclick="window.location.href = '/viia/accounts/${transaction.accountId}/transactions/${transaction.id}/details'">`)
                   .append(textAndDateContainer)
                   .append(amountAndBalanceContainer);
            
            $('#transaction-container').append(transactionContainer);
        }
        
        function loadMore() {
            let pagingToken = $('#pagingTokenInput').val();
            let includeDeleted = $('#includeDeletedInput').val() === '1';
            $.ajax({
                            url: `/viia/accounts/@Model.Transactions[0].AccountId/transactions/fetch?pagingToken=${pagingToken}&includeDeleted=${includeDeleted}`,
                            type: 'GET',
                            dataType: "json",
                            success: function(data) {
                                if(data.pagingToken === null || data.pagingToken === undefined || data.pagingToken === '') {
                                    $('#load-more-btn').remove();
                                }
                                $('#pagingTokenInput').val(data.pagingToken);
                                renderTransactions(data.transactions);
                            }
                        });
        }
        
        function toggleIncludeDeleted() {
            console.log(`old ${$('#include-deleted').is(':checked')}`);
            let newValue = !$('#include-deleted').is(':checked');
            console.log(`new ${newValue}`);
            
            $('#includeDeletedInput').val(newValue ? '1' : '0');
            $('#transaction-container').empty();
            $('#pagingTokenInput').val('');
            loadMore();
        }
    </script>
}