@model CallbackViewModel

@{
    ViewBag.Title = "Complete";
}

@if (!Model.AutomaticallyFinish)
{
    <div class="text-center" style="height: 80vh; width: 60vw; position: absolute; left: 20vw; top: 10vh;">
    <h1 class="text-center">Viia flow complete.</h1>
    <p>This is the configured callback url, that Viia redirects to, after going through Viia end-user flow, or if it fails.</p>
    <p>In success scenario, there's a 'code' query parameter provided. e.g., current query: </p>
    <pre>@Model.Query</pre>
    <p>This code can be exchanged with Viia API for an access token that is used for accessing end-user's data</p>
    <p>In this Sample App's case, we exchanged the code for access token, while processing this request, before rendering the view.</p>
    <button class="btn btn-primary" style="white-space: normal; width: 100%;" onclick="finishFlowIframe()">Finish Flow (Iframe Flow, makes a post message, to which parent page is listening to)</button>
    <button class="btn btn-primary" style="margin-top: 1rem; white-space: normal; width: 100%;"  onclick="finishFlowRedirect()">Finish Flow (Redirect Flow, redirects back to accounts page)</button>
</div>
}


@section Scripts
{
    <script>
        function finishFlowIframe() {
                    window.parent.postMessage("viia-login-done", '*');
                }
                
        function finishFlowRedirect() {
            window.location.href = "/viia/accounts";
        }
        @if (Model.AutomaticallyFinish)
        {
            <text>
            $(document).ready(function()
            {
                finishFlowIframe();
            });
            </text>
        }
        
    </script>
}